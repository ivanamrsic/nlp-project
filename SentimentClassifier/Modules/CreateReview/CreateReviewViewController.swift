//
//  CreateReviewViewController.swift
//  SentimentClassifier
//
//  Created by Ivana Mr≈°iƒá on 26.12.2020..
//  Copyright (c) 2020 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import UIKit
import RxSwift
import RxCocoa
import SkyFloatingLabelTextField

final class CreateReviewViewController: NLPViewController {

    // MARK: - IBOutlets

    @IBOutlet private weak var titleLabel: UILabel!
    @IBOutlet private weak var movieTitleTextField: SkyFloatingLabelTextField!
    @IBOutlet private weak var reviewTitleTextField: SkyFloatingLabelTextField!
    @IBOutlet private weak var reviewTextView: UITextView!
    @IBOutlet private weak var submitButton: UIButton!
    @IBOutlet weak var enterReviewLabel: UILabel!
    
    // MARK: - Public properties -

    var presenter: CreateReviewPresenterInterface!

    // MARK: - Private properties -

    private let disposeBag = DisposeBag()

    // MARK: - Lifecycle -

    override func viewDidLoad() {
        super.viewDidLoad()
        configure()
        setupUI()
    }
	
}

// MARK: - Extensions -

extension CreateReviewViewController: CreateReviewViewInterface {
}

private extension CreateReviewViewController {

    func configure() {
        let output = CreateReview.ViewOutput(
            searchMovieAction: movieTitleTextField.rx.controlEvent(.editingDidBegin).asSignal()
        )

        let input = presenter.configure(with: output)
        handle(title: input.title)
    }

}

private extension CreateReviewViewController {

    func setupUI() {
        titleLabel.text = Strings.createReviewTitle
        movieTitleTextField.placeholder = Strings.movieTitle
        movieTitleTextField.title = Strings.movieTitle
        reviewTitleTextField.placeholder = Strings.reviewTitle
        reviewTitleTextField.title = Strings.reviewTitle
        submitButton.setTitle(Strings.createReview, for: .normal)
    }
}

private extension CreateReviewViewController {

    func handle(title: Driver<String>) {
        title.drive(movieTitleTextField.rx.text)
            .disposed(by: disposeBag)
    }
}
