//
//  FilterReviewsViewController.swift
//  SentimentClassifier
//
//  Created by Ivana Mr≈°iƒá on 27.12.2020..
//  Copyright (c) 2020 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import UIKit
import RxSwift
import RxCocoa

final class FilterReviewsViewController: UIViewController {

    // MARK: - IBOutlets

    @IBOutlet private weak var titleLabel: UILabel!
    @IBOutlet private weak var filterSentimentLabel: UILabel!

    @IBOutlet private weak var filterButton: UIButton!

    @IBOutlet private weak var tableView: UITableView! {
        didSet {
            tableView.registerNib(cellOfType: FilterTableViewCell.self)
        }
    }

    // MARK: - Public properties

    var presenter: FilterReviewsPresenterInterface!

    // MARK: - Private properties

    private lazy var dataSourceDelegate: TableDataSourceDelegate = {
        return TableDataSourceDelegate(tableView: self.tableView)
    }()

    private let disposeBag = DisposeBag()

    // MARK: - Lifecycle

    override func viewDidLoad() {
        super.viewDidLoad()
        configure()
        setupUI()
    }
	
}

// MARK: - FilterReviewsViewInterface

extension FilterReviewsViewController: FilterReviewsViewInterface {
}

// MARK: - Configuration

private extension FilterReviewsViewController {

    func configure() {
        let output = FilterReviews.ViewOutput(
            filterAction: filterButton.rx.tap.asSignal()
        )

        let input = presenter.configure(with: output)
        handle(items: input.items)
    }
}

// MARK: - UI Setup

private extension FilterReviewsViewController {

    func setupUI() {
        titleLabel.text = Strings.filterReviewsTitle
        filterSentimentLabel.text = Strings.filterBySentiment
        filterButton.setTitle(Strings.filterAction, for: .normal)
    }
}

// MARK: - Binding setup

private extension FilterReviewsViewController {

    func handle(items: Driver<[TableCellItem]>) {
        items.drive(dataSourceDelegate.rx.items)
            .disposed(by: disposeBag)
    }
}
