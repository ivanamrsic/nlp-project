//
//  EditPersonalInfoPresenter.swift
//  SentimentClassifier
//
//  Created by Ivana Mršić on 29.12.2020..
//  Copyright (c) 2020 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import UIKit
import RxSwift
import RxCocoa

final class EditPersonalInfoPresenter {

    // MARK: - Private properties

    private unowned let view: EditPersonalInfoViewInterface
    private let interactor: EditPersonalInfoInteractorInterface
    private let wireframe: EditPersonalInfoWireframeInterface

    private let disposeBag = DisposeBag()

    // MARK: - Lifecycle

    init(view: EditPersonalInfoViewInterface, interactor: EditPersonalInfoInteractorInterface, wireframe: EditPersonalInfoWireframeInterface) {
        self.view = view
        self.interactor = interactor
        self.wireframe = wireframe
    }
}

// MARK: - EditPersonalInfoPresenterInterface

extension EditPersonalInfoPresenter: EditPersonalInfoPresenterInterface {

    func configure(with output: EditPersonalInfo.ViewOutput) -> EditPersonalInfo.ViewInput {

        handle(
            save: output.saveAction,
            username: output.username,
            email: output.email
        )
        
        return EditPersonalInfo.ViewInput(
            username: interactor.username,
            email: interactor.email
        )
    }
}

// MARK: - Binding setup

private extension EditPersonalInfoPresenter {

    func handle(
        save: Signal<Void>,
        username: Driver<String?>,
        email: Driver<String?>
    ) {

        let data = Driver.combineLatest(username, email)

        save
            .flatMap { data }
            .drive(onNext: { [unowned interactor, unowned wireframe] (username, email) in
                interactor.updateData(username: username, email: email)
                wireframe.close()
            })
            .disposed(by: disposeBag)
    }
}
