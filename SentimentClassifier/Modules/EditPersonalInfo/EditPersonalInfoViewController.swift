//
//  EditPersonalInfoViewController.swift
//  SentimentClassifier
//
//  Created by Ivana Mr≈°iƒá on 29.12.2020..
//  Copyright (c) 2020 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import UIKit
import RxSwift
import RxCocoa
import SkyFloatingLabelTextField

final class EditPersonalInfoViewController: NLPViewController {

    // MARK: - IBOutlets

    @IBOutlet private weak var titleLabel: UILabel!
    @IBOutlet private weak var usernameTextField: SkyFloatingLabelTextField!
    @IBOutlet private weak var emailTextField: SkyFloatingLabelTextField!
    @IBOutlet private weak var saveButton: UIButton!

    // MARK: - Public properties

    var presenter: EditPersonalInfoPresenterInterface!

    // MARK: - Private properties

    private let disposeBag = DisposeBag()

    // MARK: - Lifecycle

    override func viewDidLoad() {
        super.viewDidLoad()
        configure()
        setupUI()
        hideKeyboardWhenTappedAround()
    }

    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        navigationController?.setNavigationBarHidden(false, animated: animated)
    }
}

// MARK: - EditPersonalInfoViewInterface

extension EditPersonalInfoViewController: EditPersonalInfoViewInterface {
}

// MARK: - Configuration

private extension EditPersonalInfoViewController {

    func configure() {
        let output = EditPersonalInfo.ViewOutput(
            saveAction: saveButton.rx.tap.asSignal(),
            username: usernameTextField.rx.text.asDriver(),
            email: emailTextField.rx.text.asDriver()
        )

        let input = presenter.configure(with: output)
        handle(username: input.username)
        handle(email: input.email)
    }

}

// MARK: - UI Setup

private extension EditPersonalInfoViewController {

    func setupUI() {
        titleLabel.text = Strings.editPersonalInfo
        usernameTextField.placeholder = Strings.usernameTitle
        usernameTextField.title = Strings.usernameTitle
        emailTextField.placeholder = Strings.emailTitle
        emailTextField.title = Strings.emailTitle
        saveButton.setDefaultCornerRadius()
        saveButton.setTitle(Strings.save, for: .normal)
    }
}

// MARK: - Binding Setup

private extension EditPersonalInfoViewController {

    func handle(username: Driver<String?>) {
        username
            .filter { [unowned usernameTextField] in $0 != usernameTextField?.text }
            .filter { $0 != Constants.emptyValue }
            .drive(usernameTextField.rx.text)
            .disposed(by: disposeBag)
    }

    func handle(email: Driver<String?>) {
        email
            .filter { [unowned emailTextField] in $0 != emailTextField?.text }
            .filter { $0 != Constants.emptyValue }
            .drive(emailTextField.rx.text)
            .disposed(by: disposeBag)
    }
}
